import React, { Component, useState } from "react";
import { Button, Header, Form, Input, List, Modal, TextArea } from 'semantic-ui-react';
import * as BlindSignature from 'blind-signatures';
import { BigInteger } from 'jsbn';

function BlindSigRequests(props) {
  const {requests, organizerId, handleSign} = props;
  const Requests = requests.map((request) => {
    if (request.organizerId === organizerId) {
      return BlindSigRequest(request, handleSign);
    }
    return null;
  });

  return (
    <List divided>
      {Requests}
    </List>
  );
}

function BlindSigRequest(request, signCallback) {
  const [privateKey, setPrivateKey] = useState('');
  let disableSign = privateKey === '';
  const [modalOpen, setModalOpen] = useState(false);
  let handleOpen = () => setModalOpen(true);
  let handleClose = () => {
    setModalOpen(false);
    setPrivateKey('');
  }

  return (
    <List.Item key={request.blinded}>
      <List.Content floated='right'>
      <Modal
          trigger={<Button primary onClick={handleOpen}>Sign this ballot</Button>}
          open={modalOpen}
          onClose={handleClose}
        >
          <Modal.Header>
            Sign this ballot
          </Modal.Header>
          <Modal.Content>
            <Header>
              Blinded vote
            </Header>
            <Form>
              <TextArea value={request.blinded} />
            </Form>
          </Modal.Content>
          <Modal.Content>
            <Input
              fluid
              placeholder='Private key...'
              onChange={(e) => setPrivateKey(e.target.value)}
            />
          </Modal.Content>
          <Modal.Actions>
            <Button primary disabled={disableSign} onClick={() => {signCallback(request, privateKey); handleClose()}}>
              Sign
            </Button>
            <Button negative onClick={handleClose}>
              Cancel
            </Button>
          </Modal.Actions>
        </Modal>
      </List.Content>
      <List.Content>
        Address : {request.requesterAddress}
      </List.Content>
    </List.Item>
  );
}

class VotePreparationOrganizer extends Component {
  constructor(props) {
    super(props);
    this.state = {
      votingContract: {
        blindSigRequests: [
          {
            requesterAddress: '0xAddress001',
            organizerId: '1',
            blinded: '8117975862917616535203718728602315406509229351456348863271583252693908129483894965413868668676582835024120203152406206179841103968205373673241202022023197496725021324889571998404014951244114098103107790113395999189612989068524272417870062707450998159226390751618499722331935458700129309014810606210676933652613780685600951963700650668849019598714971483131432996646634688172167561959590162519354828149722613644783322013894821101150557745067989547015710335006054311416838393323067656249323161325255888883913547391059590768886852737976929010488680748670195765386680031867083255345599718567594455436661909201209858908355'
          },
          {
            requesterAddress: '0xAddress002',
            organizerId: '3',
            blinded: '10145883455508304424376424789191660177315674526812815344053896875467701943870049050198462341215442736284733159621596280275966379824261730345568090959268140246254212876140034182979756583077964289309009779033823331031845719048340274516829951037813099583208580780385473043878516244314605222536072448873716968483927443789661315980833622256602277611028407238365549625359621826826933145925779453356022179552570083166303910667013198081630015311018667885424046975945423612077135934759835287549552850534891657683046690291104064446167139947179609447876344069634656814275426941572011333996105011405910002872512432552199258003214'
          },
          {
            requesterAddress: '0xAddress003',
            organizerId: '3',
            blinded: '11566375081294495229943018748317249171524310348424102372045812540827225743880827655800744612142007996363781763425792158425432455493721507141481080833685436314855974699982536568749609148665875852751472573093842683593376841514690810725583447827118771687989532854299863534349039781995267892280446654686987700403956647210332388726824438451223879910056604353969933299166877978714507766619224610767500792995046076342069048708104182536649101871081752714243629376742462682798493758247265147824169098740648907485362029264225041674195799954030558623267775385804790748826147870353283412595193346570818291891767430701734068908954'
          },
          {
            requesterAddress: '0xAddress004',
            organizerId: '2',
            blinded: '15345650910784553321802597487532095762724997020844627583267996710596877945366069797006677671676247774087624267248279737426455487214846188495725810305392153427594821459183118972284817536193240576667181882312402810626737378769731707125853885654822334419770975422871603413027263271237385565197149192624748952680441395657387165979658331374202169859717741971530037007081745806982061619608086729712533672886176987234424929347941984590068404546069697645984588988081495276981495353081166899195665261153710774737552259560291408550129569768107041389907815432101705535764721123185873189049230443177713828477096848767328375483698'
          },
          {
            requesterAddress: '0xAddress005',
            organizerId: '2',
            blinded: '10245731460611582307838834390266903472478162720955258633103960305602638609376006879342085494433040990367910141488134080575291156567979142576700991497929961498643834727252717271647750372131796139014590230797179027484813733800377483828086187431779157915943459788655535467224612377174372258832378204491434729966314663619011131335090277663608234939821993702516656829965192569901779373182656781521202411844965413858816404959092107406459252381866253356019944767045537178278676142294478449992308803809837776259659417582153238100456936995263388497735512394880176566466535050858605989408787222967285771891396603165442661998539'
          },
          {
            requesterAddress: '0xAddress006',
            organizerId: '1',
            blinded: '10370840196842416147582479290891520121971831713945853808453356195745034902107150006224851613151070424918498953145962791905405146307715063280502820601604040927048676413610960819050331746330781286208202826378856868155503644643285785502893984601470886021894554385483556595929659317057138747420878166263584879369112804821174339467889087112652581289143598725126610936576398122286105805318524017845217360919570773111738366125776310781886050781295742263211492290712020769502327220680213484663572618118202668634218632887480476301471187980386009444613942780284437565687294696640136082452739516498442237873822421368276711739444'
          },
          {
            requesterAddress: '0xAddress007',
            blinded: '12892477465193237015436448410101168217188413629704576128729749561616579976398137107780106409048143158044343144203439849633903864171943542679014063728283865777983811268989725919673343668842780397038657616587090454560759848020558706266487204491736718684342695081929526729799070165929831956084015653023870709163647977654315329030934597206300314698274585425898016687841017431235389001829271968280870039349908518385358278540338885086541056365149447623323389921625596558408372580076360903327086386941404179716176992495360430636743121134771959053160792882770065284697939753750060911349301386782796763070099442574018281444134',
            organizerId: '4'
          }
        ]
      },
      organizerId: '4', // Selected organizer account id
      organizers: [ // Organizer account
        {
          id: '1',
          address: '0xAddressOrg001',
          name: 'Org1',
          blindSigKey: { // RSA keypair
            N: '29966692371364866625346898353663834134938385542002417037721577477302102136522085939472165345604159090008369291967229214089843550402783764345171829774118370421727069328975236719404868237298550523989366936116144150572205603225580613276301181810980227503747111091217434069794434110873713548193276565135873156551776781744977506384102252699464204349946745613824014413457618301726927010747822355674379832350188825717228418277968661184894099448068813151646552494933847934355517511397146924721973857101644904751900691439081133481472498369847582949341542277140564618444421223545987899994237990578140719418027385682765400810787',
            E: '65537',
            D: '1327849529982202003143375388239311752565132240016708410173542594169481431930972390683540109611890657146105321022824261679919826515856448291169552980210259055261843070804951209746429304989776625748281452957585525935909258461130141766549866975587631119381137534658214879208432437523494577779777456172155814984289087482269085547544579770203041188479306903737828941926443439514969197918498919543773935981044034789534513672268519659105053513908698473628017633224527370382100880640612662936487538672611272459549958884865962440439310497356008441861580994978271935947909771746359597846371049341264710888559214959510653701633'
          }
        },
        {
          id: '2',
          address: '0xAddressOrg002',
          name: 'Org2',
          blindSigKey: {
            N: '26458970144176529231278251478923876274581682945160630211923288556492285074551812817562954732957996890856225708775063710963505080257659492810452589951505161037289950403780584424848427034382647213927966088689259773969220432507351297342517879366775210437071365276681805376039406952355809450845271748916810754673242718443536347275958685398465694101786361797986578701119612608844428824062586235437039817380062355856918189315480847660878662520951404772466376423110443487482138333887388449385867806705579043254110057834686860727136742974754338482731437361733622421487674030607511342064989032215407906503194121394165185383797',
            E: '65537',
            D: '21682087852556578762619565980676667765177064598163657865501017927680824113535943167481246989235229305940668655717606796119673472011804065816033024754651337008219124867403699994453282479843753431252596530098367275905472989728051351508001933432910610441779722480189760863637278947407857341008061389376647108956909882837507480288548189565947593968833181989454247021073827570454841974321618658428920036949830594030239100468978668425496754974550114824474790046688476971640405930796213312409407846002802005107282954922944002295438025942847004653387765363820895113658221217163253517804037877216582664896393846402275542228513'
          }
        },
        {
          id: '3',
          address: '0xAddressOrg003',
          name: 'Org3',
          blindSigKey: {
            N: '22174933060533612279001839757293277558447636625990692079946257223347032594943597488661968989040186738935132503446965285010055923873177882577484769463195499109178479501165613614043668876610322147551149096608999387482124244500100367766728152174625193206582596173771525689770346002747421347904671941536291573608005763407437768868993893358554277826661660885093146948296152543868273304544471129280791068975551329074059044323118982282750362281455605896422650475741100638391510715626109674650392999767613861555822958045214362249243277613528444450124436766949894713659037566339120415451310965138637574175225632109970533494113',
            E: '65537',
            D: '10061397523353639848152932038739534941758074411560785810905014034720041522243050718263764131072508550421519143727954586188855500744507949956880649171576077048240402619080224704017616578648466353046080375005953976931633222980224675159244828616882901951431101207306866165845415700103717307800072094443187302329961113906508533123613320219479963489171005554292481096064502173480164450510523436134686083895219974556164961523423617796845477418957884588140319486231615170321410713582141361518752454229869311622742219866866906941990336357138073037660817993199807859647451895257543889191589416438824169906926533538561468219393'
          }
        },
        {
          id: '4',
          address: '0xAddressOrg004',
          name: 'Org4',
          blindSigKey: {
            N: '16775050148364882245462320022645711979084082808337620100786492237178276323524241257195211673938644093147897800612374614522663611735101343119890322873849442378422327932652134334846956087038755944911232948970295492128892561484459845274903194935038106971311360097576103899315925905098692697717803827791144026274296101244412223223470049083265942846444612408948173048910727508457418654464393545886905333474218934459199740388726253551580709423439681120085669619756873014277697219857743030398799514005464917922078134642831348625190313140985084331196622556515915406432281755384503209496762260136702417829129242855897174049259',
            E: '65537',
            D: '1903085247312096975678049794289803753063004954147889061894007503904977104008464436078038341635012570495363232182629739825991485012290438776513794506417300213369089341582138620620216343548425323869188656416896516227143692793947830227488369231762337692169308365129290820321557427169519206059658993539941648768594991219952153833917329685029921567856079892931654336662579690795536133387689849192984496232752933355716481304410085704608756445133629605767121410887026435688214379450296273515075527756327638831801897506092253419924028543905550041579602575297064013967240562553642182753896704552383540212742743226927017223993'
          }
        }
      ]
    }
  }
  
  getCurrentOrganizerAccount = (organizerId) => {
    return this.state.organizers.find(organizer => organizer.id === organizerId);
  }

  handleSign = (request, privateKey) => {
    console.log("Sign ballot " + request.blinded + " with privateKey : " + privateKey);
    const key = {
      keyPair: {
        e: new BigInteger(this.getCurrentOrganizerAccount(this.state.organizerId).blindSigKey.E.toString()),
        n: new BigInteger(this.getCurrentOrganizerAccount(this.state.organizerId).blindSigKey.N.toString()),
        d: new BigInteger(privateKey.toString())
      }
    }
    const signed = BlindSignature.sign({
      blinded: request.blinded,
      key: key
    });
    console.log("Signed : " + signed);

    // Send signed vote to VotingContract
    const message = {
      requesterAddress: request.requesterAddress,
      signed: signed.toString()
    }
    console.log("Send : " + JSON.stringify(message));
  }

  render() {
    return (
      <div>
        <BlindSigRequests requests={this.state.votingContract.blindSigRequests} organizerId={this.state.organizerId} handleSign={this.handleSign}/>
      </div>
    );
  }
}

export default VotePreparationOrganizer;